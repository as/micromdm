// Code generated by protoc-gen-go.
// source: depsync.proto
// DO NOT EDIT!

/*
Package depsyncproto is a generated protocol buffer package.

It is generated from these files:
	depsync.proto

It has these top-level messages:
	Event
	Device
*/
package depsyncproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event struct {
	Id      string    `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Time    int64     `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	Devices []*Device `protobuf:"bytes,3,rep,name=devices" json:"devices,omitempty"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Event) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Event) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

type Device struct {
	SerialNumber       string `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber" json:"serial_number,omitempty"`
	Model              string `protobuf:"bytes,2,opt,name=model" json:"model,omitempty"`
	Description        string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Color              string `protobuf:"bytes,4,opt,name=color" json:"color,omitempty"`
	AssetTag           string `protobuf:"bytes,5,opt,name=asset_tag,json=assetTag" json:"asset_tag,omitempty"`
	ProfileStatus      string `protobuf:"bytes,6,opt,name=profile_status,json=profileStatus" json:"profile_status,omitempty"`
	ProfileUuid        string `protobuf:"bytes,7,opt,name=profile_uuid,json=profileUuid" json:"profile_uuid,omitempty"`
	ProfileAssignTime  int64  `protobuf:"varint,8,opt,name=profile_assign_time,json=profileAssignTime" json:"profile_assign_time,omitempty"`
	ProfilePushTime    int64  `protobuf:"varint,9,opt,name=profile_push_time,json=profilePushTime" json:"profile_push_time,omitempty"`
	DeviceAssignedDate int64  `protobuf:"varint,10,opt,name=device_assigned_date,json=deviceAssignedDate" json:"device_assigned_date,omitempty"`
	DeviceAssignedBy   string `protobuf:"bytes,11,opt,name=device_assigned_by,json=deviceAssignedBy" json:"device_assigned_by,omitempty"`
	OpType             string `protobuf:"bytes,12,opt,name=op_type,json=opType" json:"op_type,omitempty"`
	OpDate             int64  `protobuf:"varint,13,opt,name=op_date,json=opDate" json:"op_date,omitempty"`
}

func (m *Device) Reset()                    { *m = Device{} }
func (m *Device) String() string            { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()               {}
func (*Device) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Device) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *Device) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Device) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Device) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *Device) GetAssetTag() string {
	if m != nil {
		return m.AssetTag
	}
	return ""
}

func (m *Device) GetProfileStatus() string {
	if m != nil {
		return m.ProfileStatus
	}
	return ""
}

func (m *Device) GetProfileUuid() string {
	if m != nil {
		return m.ProfileUuid
	}
	return ""
}

func (m *Device) GetProfileAssignTime() int64 {
	if m != nil {
		return m.ProfileAssignTime
	}
	return 0
}

func (m *Device) GetProfilePushTime() int64 {
	if m != nil {
		return m.ProfilePushTime
	}
	return 0
}

func (m *Device) GetDeviceAssignedDate() int64 {
	if m != nil {
		return m.DeviceAssignedDate
	}
	return 0
}

func (m *Device) GetDeviceAssignedBy() string {
	if m != nil {
		return m.DeviceAssignedBy
	}
	return ""
}

func (m *Device) GetOpType() string {
	if m != nil {
		return m.OpType
	}
	return ""
}

func (m *Device) GetOpDate() int64 {
	if m != nil {
		return m.OpDate
	}
	return 0
}

func init() {
	proto.RegisterType((*Event)(nil), "depsyncproto.Event")
	proto.RegisterType((*Device)(nil), "depsyncproto.Device")
}

func init() { proto.RegisterFile("depsync.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 361 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x91, 0x51, 0x8b, 0xd3, 0x40,
	0x10, 0xc7, 0x69, 0x73, 0x4d, 0x2f, 0xd3, 0xe4, 0xd4, 0xb1, 0xe0, 0x82, 0x2f, 0xf1, 0x44, 0x28,
	0x22, 0x41, 0xf4, 0x13, 0x9c, 0x9c, 0xaf, 0x22, 0xb1, 0x3e, 0xf9, 0x10, 0xb6, 0xd9, 0xb1, 0xb7,
	0x90, 0x66, 0x97, 0xec, 0xa6, 0x90, 0x6f, 0xe9, 0x47, 0x92, 0xce, 0x6e, 0xa0, 0xfa, 0x96, 0xf9,
	0xff, 0x7e, 0x33, 0x13, 0x66, 0xa1, 0x50, 0x64, 0xdd, 0xd4, 0xb7, 0x95, 0x1d, 0x8c, 0x37, 0x98,
	0xc7, 0x92, 0xab, 0xfb, 0x5f, 0xb0, 0xfa, 0x7a, 0xa6, 0xde, 0xe3, 0x1d, 0x2c, 0xb5, 0x12, 0x8b,
	0x72, 0xb1, 0xcb, 0xea, 0xa5, 0x56, 0x88, 0x70, 0xe3, 0xf5, 0x89, 0xc4, 0xb2, 0x5c, 0xec, 0x92,
	0x9a, 0xbf, 0xb1, 0x82, 0xb5, 0xa2, 0xb3, 0x6e, 0xc9, 0x89, 0xa4, 0x4c, 0x76, 0x9b, 0x4f, 0xdb,
	0xea, 0x7a, 0x58, 0xf5, 0xc8, 0xb0, 0x9e, 0xa5, 0xfb, 0x3f, 0x09, 0xa4, 0x21, 0xc3, 0xb7, 0x50,
	0x38, 0x1a, 0xb4, 0xec, 0x9a, 0x7e, 0x3c, 0x1d, 0x68, 0x88, 0x9b, 0xf2, 0x10, 0x7e, 0xe3, 0x0c,
	0xb7, 0xb0, 0x3a, 0x19, 0x45, 0x1d, 0x2f, 0xcd, 0xea, 0x50, 0x60, 0x09, 0x1b, 0x45, 0xae, 0x1d,
	0xb4, 0xf5, 0xda, 0xf4, 0x22, 0x61, 0x76, 0x1d, 0x5d, 0xfa, 0x5a, 0xd3, 0x99, 0x41, 0xdc, 0x84,
	0x3e, 0x2e, 0xf0, 0x35, 0x64, 0xd2, 0x39, 0xf2, 0x8d, 0x97, 0x47, 0xb1, 0x62, 0x72, 0xcb, 0xc1,
	0x5e, 0x1e, 0xf1, 0x1d, 0xdc, 0xd9, 0xc1, 0xfc, 0xd6, 0x1d, 0x35, 0xce, 0x4b, 0x3f, 0x3a, 0x91,
	0xb2, 0x51, 0xc4, 0xf4, 0x07, 0x87, 0xf8, 0x06, 0xf2, 0x59, 0x1b, 0x47, 0xad, 0xc4, 0x3a, 0x2c,
	0x8f, 0xd9, 0xcf, 0x51, 0x2b, 0xac, 0xe0, 0xe5, 0xac, 0x48, 0xe7, 0xf4, 0xb1, 0x6f, 0xf8, 0x6e,
	0xb7, 0x7c, 0xb7, 0x17, 0x11, 0x3d, 0x30, 0xd9, 0x5f, 0x8e, 0xf8, 0x1e, 0xe6, 0xb0, 0xb1, 0xa3,
	0x7b, 0x0a, 0x76, 0xc6, 0xf6, 0xb3, 0x08, 0xbe, 0x8f, 0xee, 0x89, 0xdd, 0x8f, 0xb0, 0x0d, 0xb7,
	0x8c, 0xa3, 0x49, 0x35, 0x4a, 0x7a, 0x12, 0xc0, 0x3a, 0x06, 0xf6, 0x10, 0xd1, 0xa3, 0xf4, 0x84,
	0x1f, 0x00, 0xff, 0xef, 0x38, 0x4c, 0x62, 0xc3, 0xbf, 0xfd, 0xfc, 0x5f, 0xff, 0xcb, 0x84, 0xaf,
	0x60, 0x6d, 0x6c, 0xe3, 0x27, 0x4b, 0x22, 0x67, 0x25, 0x35, 0x76, 0x3f, 0x59, 0x8a, 0x80, 0x77,
	0x15, 0xbc, 0x2b, 0x35, 0xf6, 0x32, 0xff, 0x90, 0xf2, 0x4b, 0x7f, 0xfe, 0x1b, 0x00, 0x00, 0xff,
	0xff, 0x1d, 0x9a, 0x90, 0xb5, 0x55, 0x02, 0x00, 0x00,
}
