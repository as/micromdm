// Code generated by protoc-gen-go.
// source: checkin.proto
// DO NOT EDIT!

/*
Package checkinproto is a generated protocol buffer package.

It is generated from these files:
	checkin.proto

It has these top-level messages:
	Event
	Command
	Authenticate
	TokenUpdate
*/
package checkinproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Event struct {
	Id      string   `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Time    int64    `protobuf:"varint,2,opt,name=time" json:"time,omitempty"`
	Command *Command `protobuf:"bytes,3,opt,name=command" json:"command,omitempty"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Event) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Event) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Event) GetCommand() *Command {
	if m != nil {
		return m.Command
	}
	return nil
}

type Command struct {
	MessageType  string        `protobuf:"bytes,1,opt,name=message_type,json=messageType" json:"message_type,omitempty"`
	Topic        string        `protobuf:"bytes,2,opt,name=topic" json:"topic,omitempty"`
	Udid         string        `protobuf:"bytes,3,opt,name=udid" json:"udid,omitempty"`
	Authenticate *Authenticate `protobuf:"bytes,4,opt,name=authenticate" json:"authenticate,omitempty"`
	TokenUpdate  *TokenUpdate  `protobuf:"bytes,5,opt,name=token_update,json=tokenUpdate" json:"token_update,omitempty"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Command) GetMessageType() string {
	if m != nil {
		return m.MessageType
	}
	return ""
}

func (m *Command) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *Command) GetUdid() string {
	if m != nil {
		return m.Udid
	}
	return ""
}

func (m *Command) GetAuthenticate() *Authenticate {
	if m != nil {
		return m.Authenticate
	}
	return nil
}

func (m *Command) GetTokenUpdate() *TokenUpdate {
	if m != nil {
		return m.TokenUpdate
	}
	return nil
}

type Authenticate struct {
	OsVersion    string `protobuf:"bytes,1,opt,name=os_version,json=osVersion" json:"os_version,omitempty"`
	BuildVersion string `protobuf:"bytes,2,opt,name=build_version,json=buildVersion" json:"build_version,omitempty"`
	ProductName  string `protobuf:"bytes,3,opt,name=product_name,json=productName" json:"product_name,omitempty"`
	SerialNumber string `protobuf:"bytes,4,opt,name=serial_number,json=serialNumber" json:"serial_number,omitempty"`
	Imei         string `protobuf:"bytes,5,opt,name=imei" json:"imei,omitempty"`
	Meid         string `protobuf:"bytes,6,opt,name=meid" json:"meid,omitempty"`
	DeviceName   string `protobuf:"bytes,7,opt,name=device_name,json=deviceName" json:"device_name,omitempty"`
	Challenge    []byte `protobuf:"bytes,8,opt,name=challenge,proto3" json:"challenge,omitempty"`
	Model        string `protobuf:"bytes,9,opt,name=model" json:"model,omitempty"`
	ModelName    string `protobuf:"bytes,10,opt,name=model_name,json=modelName" json:"model_name,omitempty"`
}

func (m *Authenticate) Reset()                    { *m = Authenticate{} }
func (m *Authenticate) String() string            { return proto.CompactTextString(m) }
func (*Authenticate) ProtoMessage()               {}
func (*Authenticate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Authenticate) GetOsVersion() string {
	if m != nil {
		return m.OsVersion
	}
	return ""
}

func (m *Authenticate) GetBuildVersion() string {
	if m != nil {
		return m.BuildVersion
	}
	return ""
}

func (m *Authenticate) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

func (m *Authenticate) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *Authenticate) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *Authenticate) GetMeid() string {
	if m != nil {
		return m.Meid
	}
	return ""
}

func (m *Authenticate) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

func (m *Authenticate) GetChallenge() []byte {
	if m != nil {
		return m.Challenge
	}
	return nil
}

func (m *Authenticate) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Authenticate) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

type TokenUpdate struct {
	Token                 []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	PushMagic             string `protobuf:"bytes,2,opt,name=push_magic,json=pushMagic" json:"push_magic,omitempty"`
	UnlockToken           []byte `protobuf:"bytes,3,opt,name=unlock_token,json=unlockToken,proto3" json:"unlock_token,omitempty"`
	AwaitingConfiguration bool   `protobuf:"varint,4,opt,name=awaiting_configuration,json=awaitingConfiguration" json:"awaiting_configuration,omitempty"`
	UserId                string `protobuf:"bytes,5,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	UserLongName          string `protobuf:"bytes,6,opt,name=user_long_name,json=userLongName" json:"user_long_name,omitempty"`
	UserShortName         string `protobuf:"bytes,7,opt,name=user_short_name,json=userShortName" json:"user_short_name,omitempty"`
	NotOnConsole          bool   `protobuf:"varint,8,opt,name=not_on_console,json=notOnConsole" json:"not_on_console,omitempty"`
}

func (m *TokenUpdate) Reset()                    { *m = TokenUpdate{} }
func (m *TokenUpdate) String() string            { return proto.CompactTextString(m) }
func (*TokenUpdate) ProtoMessage()               {}
func (*TokenUpdate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *TokenUpdate) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *TokenUpdate) GetPushMagic() string {
	if m != nil {
		return m.PushMagic
	}
	return ""
}

func (m *TokenUpdate) GetUnlockToken() []byte {
	if m != nil {
		return m.UnlockToken
	}
	return nil
}

func (m *TokenUpdate) GetAwaitingConfiguration() bool {
	if m != nil {
		return m.AwaitingConfiguration
	}
	return false
}

func (m *TokenUpdate) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TokenUpdate) GetUserLongName() string {
	if m != nil {
		return m.UserLongName
	}
	return ""
}

func (m *TokenUpdate) GetUserShortName() string {
	if m != nil {
		return m.UserShortName
	}
	return ""
}

func (m *TokenUpdate) GetNotOnConsole() bool {
	if m != nil {
		return m.NotOnConsole
	}
	return false
}

func init() {
	proto.RegisterType((*Event)(nil), "checkinproto.Event")
	proto.RegisterType((*Command)(nil), "checkinproto.Command")
	proto.RegisterType((*Authenticate)(nil), "checkinproto.Authenticate")
	proto.RegisterType((*TokenUpdate)(nil), "checkinproto.TokenUpdate")
}

func init() { proto.RegisterFile("checkin.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 536 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x92, 0x6f, 0x8b, 0xd3, 0x4e,
	0x10, 0xc7, 0x49, 0xef, 0x4f, 0x9b, 0xc9, 0xb6, 0x3f, 0x58, 0x7e, 0xa7, 0x51, 0x14, 0x7b, 0xf5,
	0x90, 0x3e, 0xaa, 0xa0, 0xf8, 0x4c, 0x04, 0x29, 0x3e, 0x10, 0xf4, 0x84, 0xf5, 0xf4, 0x91, 0x10,
	0xb6, 0xd9, 0x31, 0x5d, 0x9a, 0xec, 0x86, 0x64, 0x53, 0xb9, 0x97, 0xe4, 0x1b, 0xf0, 0x95, 0xf8,
	0x82, 0x64, 0x67, 0xd3, 0xbb, 0xf4, 0xd9, 0xcc, 0x67, 0xbe, 0x33, 0xb3, 0xf3, 0x4d, 0x60, 0x9a,
	0x6f, 0x31, 0xdf, 0x69, 0xb3, 0xaa, 0x1b, 0xeb, 0x2c, 0x67, 0x7d, 0x4a, 0xd9, 0xe2, 0x07, 0x9c,
	0x7d, 0xd8, 0xa3, 0x71, 0x7c, 0x06, 0x23, 0xad, 0xd2, 0x68, 0x1e, 0x2d, 0x63, 0x31, 0xd2, 0x8a,
	0x73, 0x38, 0x75, 0xba, 0xc2, 0x74, 0x34, 0x8f, 0x96, 0x27, 0x82, 0x62, 0xfe, 0x12, 0xc6, 0xb9,
	0xad, 0x2a, 0x69, 0x54, 0x7a, 0x32, 0x8f, 0x96, 0xc9, 0xab, 0x8b, 0xd5, 0x70, 0xd8, 0x6a, 0x1d,
	0x8a, 0xe2, 0xa0, 0x5a, 0xfc, 0x8d, 0x60, 0xdc, 0x43, 0x7e, 0x09, 0xac, 0xc2, 0xb6, 0x95, 0x05,
	0x66, 0xee, 0xb6, 0xc6, 0x7e, 0x55, 0xd2, 0xb3, 0x9b, 0xdb, 0x1a, 0xf9, 0xff, 0x70, 0xe6, 0x6c,
	0xad, 0x73, 0x5a, 0x1a, 0x8b, 0x90, 0xf8, 0x97, 0x74, 0x4a, 0x87, 0x95, 0xb1, 0xa0, 0x98, 0xbf,
	0x03, 0x26, 0x3b, 0xb7, 0x45, 0xe3, 0x74, 0x2e, 0x1d, 0xa6, 0xa7, 0xf4, 0x9c, 0xc7, 0xc7, 0xcf,
	0x79, 0x3f, 0x50, 0x88, 0x23, 0x3d, 0x7f, 0x0b, 0xcc, 0xd9, 0x1d, 0x9a, 0xac, 0xab, 0x95, 0xef,
	0x3f, 0xa3, 0xfe, 0x47, 0xc7, 0xfd, 0x37, 0x5e, 0xf1, 0x8d, 0x04, 0x22, 0x71, 0xf7, 0xc9, 0xe2,
	0xcf, 0x08, 0xd8, 0x70, 0x38, 0x7f, 0x0a, 0x60, 0xdb, 0x6c, 0x8f, 0x4d, 0xab, 0xad, 0xe9, 0x2f,
	0x8b, 0x6d, 0xfb, 0x3d, 0x00, 0xfe, 0x1c, 0xa6, 0x9b, 0x4e, 0x97, 0xea, 0x4e, 0x11, 0xee, 0x63,
	0x04, 0x0f, 0xa2, 0x4b, 0x60, 0x75, 0x63, 0x55, 0x97, 0xbb, 0xcc, 0xc8, 0x0a, 0xfb, 0x73, 0x93,
	0x9e, 0x5d, 0xcb, 0x0a, 0xfd, 0x9c, 0x16, 0x1b, 0x2d, 0xcb, 0xcc, 0x74, 0xd5, 0x06, 0x1b, 0x3a,
	0x3b, 0x16, 0x2c, 0xc0, 0x6b, 0x62, 0xde, 0x2e, 0x5d, 0xa1, 0xa6, 0x93, 0x62, 0x41, 0xb1, 0x67,
	0x15, 0x6a, 0x95, 0x9e, 0x07, 0xe6, 0x63, 0xfe, 0x0c, 0x12, 0x85, 0x7b, 0x9d, 0x63, 0x58, 0x37,
	0xa6, 0x12, 0x04, 0x44, 0xdb, 0x9e, 0x40, 0x9c, 0x6f, 0x65, 0x59, 0xa2, 0x29, 0x30, 0x9d, 0xcc,
	0xa3, 0x25, 0x13, 0xf7, 0xc0, 0x7f, 0xab, 0xca, 0x2a, 0x2c, 0xd3, 0x38, 0x7c, 0x2b, 0x4a, 0xbc,
	0x11, 0x14, 0x84, 0x99, 0x10, 0x8c, 0x20, 0xe2, 0x47, 0x2e, 0x7e, 0x8f, 0x20, 0x19, 0xb8, 0x1a,
	0x3e, 0xf8, 0x0e, 0x83, 0x65, 0x4c, 0x84, 0xc4, 0x0f, 0xa9, 0xbb, 0x76, 0x9b, 0x55, 0xb2, 0xb8,
	0xfb, 0x17, 0x62, 0x4f, 0x3e, 0x7b, 0xe0, 0x8d, 0xea, 0x4c, 0x69, 0xf3, 0x5d, 0x16, 0x7a, 0x4f,
	0xa8, 0x37, 0x09, 0x8c, 0xa6, 0xf3, 0x37, 0xf0, 0x40, 0xfe, 0x92, 0xda, 0x69, 0x53, 0x64, 0xb9,
	0x35, 0x3f, 0x75, 0xd1, 0x35, 0xd2, 0x79, 0xe7, 0xbd, 0x63, 0x13, 0x71, 0x71, 0xa8, 0xae, 0x87,
	0x45, 0xfe, 0x10, 0xc6, 0x5d, 0x8b, 0x4d, 0xa6, 0x55, 0xef, 0xde, 0xb9, 0x4f, 0x3f, 0x2a, 0x7e,
	0x05, 0x33, 0x2a, 0x94, 0xd6, 0x14, 0xe1, 0xb4, 0xe0, 0x24, 0xf3, 0xf4, 0x93, 0x35, 0x05, 0x19,
	0xf6, 0x02, 0xfe, 0x23, 0x55, 0xbb, 0xb5, 0x8d, 0x1b, 0xba, 0x3a, 0xf5, 0xf8, 0xab, 0xa7, 0xa4,
	0xbb, 0x82, 0x99, 0xb1, 0x2e, 0xb3, 0xc6, 0xbf, 0xad, 0xb5, 0x65, 0x70, 0x77, 0x22, 0x98, 0xb1,
	0xee, 0x8b, 0x59, 0x07, 0xb6, 0x39, 0xa7, 0x9f, 0xf0, 0xf5, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xac, 0x19, 0x1f, 0x55, 0xbf, 0x03, 0x00, 0x00,
}
